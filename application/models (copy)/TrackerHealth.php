<?php

/**
 * TrackerHealth
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class TrackerHealth extends BaseTrackerHealth
{
	public function gethealth($tag, $reporttype, $starttime, $endtime , $offset = 0,$itemsperpage)
	{
		
		$query = " Zenfox_Query::create()
		->from('TrackerHealth t')
		->where('t.tag =?', '$tag')
		->andWhere('t.report_type = ?', '$reporttype')
		->andWhere('t.start_time >= ?', '$starttime')
		->andWhere('t.end_time <= ?', '$endtime')";
		
		$adapter = new Zenfox_Paginator_Adapter_DoctrineQuery($query, 0);
		
		$paginatorSession = new Zend_Session_Namespace('paginationCount');
		$paginatorSession->value = false;
		$paginator =  new Zend_Paginator($adapter);
		$paginator->setItemCountPerPage($itemsperpage);
		$paginator->setPageRange(2);
		$paginator->setCurrentPageNumber($offset);
		$translate = Zend_Registry::get('Zend_Translate');
		
		$index = 0;
		if($paginator->getTotalItemCount())
		{
			foreach($paginator as $logs)
			{
		
				$health[$index] = $logs;
		
				$index++;
			}
			$paginatorSession->unsetAll();
			return array($paginator, $health);
		}
		return NULL;
	}
	
	
	public function gettransactinghealth($trackeroraffiliate,$id,$reporttypetime, $starttime, $endtime)
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		if($trackeroraffiliate == "Tracker")
		{
			$query = Zenfox_Query::create()
					->from('TrackerHealth t')
					->where('t.tag like "tracker%"')
					->andwhere('t.tag like "%Depositors"')
					->andWhere('t.tracker_id = ?', $id)
					->andWhere('t.report_type = ?', $reporttypetime)
					->andWhere('t.start_time >= ?', $starttime)
					->andWhere('t.end_time <= ?', $endtime)
					->orderby('t.start_time','ASC');
		}	
		else 
		{
			$affiliatetrackerobject = new AffiliateTracker();
			$trackers = $affiliatetrackerobject->getAffiliateTrackersByAffiliateId($id);
			
			$length=count($trackers);
			while($length >0)
			{
				$trackerid[$length-1] = $trackers[$length-1]['tracker_id'];
				$length--;
			}
			
			$query = Zenfox_Query::create()
					->from('TrackerHealth t')
					->where('t.tag like "tracker%Depositors"')
					->andWhere('t.report_type = ?', $reporttypetime)
					->andWhere('t.start_time >= ?', $starttime)
					->andWhere('t.end_time <= ?', $endtime)
					->andWhereIn('t.tracker_id',$trackerid)
					->orderby('t.start_time','ASC');
		}
		
			
			$healthresult = $query->fetchArray();
			
			return $healthresult;
	}

	
	public function gettrackertransactions($trackeroraffiliate,$id,$reporttypetime, $starttime, $endtime)
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		
		
		
		if($trackeroraffiliate == "Tracker")
		{
			$valuequery = Zenfox_Query::create()
								->from('TrackerHealth t')
								->where('t.tag like "trackerBonusAwarded" or t.tag like "trackerManagementRake"')
								->andWhere('t.tracker_id = ?', $id)
								->andWhere('t.report_type = ?', $reporttypetime)
								->andWhere('t.start_time >= ?', $starttime)
								->andWhere('t.end_time <= ?', $endtime)
								->orderby('t.start_time','ASC');
		}
		elseif($trackeroraffiliate == "Affiliate")
		{
			$affiliatetrackerobject = new AffiliateTracker();
			$trackers = $affiliatetrackerobject->getAffiliateTrackersByAffiliateId($id);

			$length=count($trackers);
			while($length >0)
			{
				$trackerids[$length-1] = $trackers[$length-1]['tracker_id'];
				$length--;
			}
				
			
			
			$valuequery = Zenfox_Query::create()
							->from('TrackerHealth t')
							->where('t.tag like "trackerBonusAwarded" or t.tag like "trackerManagementRake"')
							->andWhere('t.report_type = ?', $reporttypetime)
							->andWhere('t.start_time >= ?', $starttime)
							->andWhere('t.end_time <= ?', $endtime)
							->andWhereIn('t.tracker_id',$trackerids)
							->orderby('t.start_time','ASC');
			
		}

	
		return $valuequery;
		
		
			
		
	}

}