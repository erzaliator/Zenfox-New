<?php

/**
 * OpponentsDetails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class OpponentsDetails extends BaseOpponentsDetails
{
	public function getlastmodifieddate($playerId)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
						->from('OpponentsDetails opp')
						->where('opp.player_id = ?',$playerId)
						->limit(1);
		try 
		{
			$array = $query->fetchArray();
		}	

		catch(Exception $e)
		{
			return false;
		}
		
		return $array[0]["last_modified_date"];
	}
	
	public function getopponentdatabyopponentId($playerId,$opponentId)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
						->from('OpponentsDetails opp')
						->where('opp.player_id = ?',$playerId)
						->andWhere('opp.opponent_id =?',$opponentId);
		try 
		{
			$array = $query->fetchArray();
		}	

		catch(Exception $e)
		{
			return false;
		}
		
		return $array;
	}
	
	public function getopponentslist($playerId)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
						->from('OpponentsDetails opp')
						->where('opp.player_id = ?',$playerId);
						
		try 
		{
			$array = $query->fetchArray();
		}	

		catch(Exception $e)
		{
			return false;
		}
		
		return $array;
	}
	
	
	public function updateopponentsdetails($playerId,$opponentdetails,$now)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		
		$length = count($opponentdetails);
		$index = 0;
		
		echo $length;
		
		while($index < $length)
		{
			set_time_limit(600);
			if($opponentdetails[$index]["OPPONENT ID"])
			{
				$opponentId = $opponentdetails[$index]["OPPONENT ID"];
			}
				
			$opponentdetails[$index]["OPPONENT ID"] = $opponentId;
			$opponentdetails[$index]["Last Modified Time"] = $now;
			
			//Zenfox_Debug::dump($opponentdetails[$index] , 'DATA2');
			
			$query = Zenfox_Query::create()
						->update('OpponentsDetails opp')
						->set('opp.games_played','?',$opponentdetails[$index]["Games Played"])
						->set('opp.total_time_played','?',($opponentdetails[$index]["Average Game Time(min)"]*$opponentdetails[$index]["Games Played"]))
						->set('opp.opponent_games_won','?',$opponentdetails[$index]["Opponent Games Won"])
						->set('opp.player_games_won','?',$opponentdetails[$index]["Player Games Won"])
						->set('opp.sessions_played','?',$opponentdetails[$index]["Sessions Played"])
						->set('opp.opponent_sessions_won','?',$opponentdetails[$index]["Opponent Sessions Won"])
						->set('opp.player_sessions_won','?',$opponentdetails[$index]["Player Sessions Won"])
						->set('opp.player_real_bet','?',$opponentdetails[$index]["Player Real Bet"])
						->set('opp.player_bonus_bet','?',$opponentdetails[$index]["Player Bonus Bet"])
						->set('opp.player_real_winnings','?',$opponentdetails[$index]["Player Real Won"])
						->set('opp.player_bonus_winnings','?',$opponentdetails[$index]["Player Bonus Won"])
						->set('opp.opponent_real_bet','?',$opponentdetails[$index]["Opponent Real Bet"])
						->set('opp.opponent_bonus_bet','?',$opponentdetails[$index]["Opponent Bonus Bet"])
						->set('opp.opponent_real_winnings','?',$opponentdetails[$index]["Opponent Real Won"])
						->set('opp.opponent_bonus_winnings','?',$opponentdetails[$index]["Opponent Bonus Won"])
						->set('opp.last_modified_date','?',$opponentdetails[$index]["Last Modified Time"])
						->where('opp.player_id = ?',$playerId)
						->andWhere('opp.opponent_id =?',$opponentdetails[$index]["OPPONENT ID"])
						->andWhere('opp.game_flavour =?',$opponentdetails[$index]["Game Flavour"]);
						
			try 
			{
				 $query->execute();
			}	
			catch(Exception $e)
			{
				echo $e;
				return false;
			}
			
			//$opponentdetails[$index] == "";
			$index++;
		}
		return true;
	}
	
	public function insertopponentdetails($playerId , $opponentdetails,$now)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		$partition = Doctrine_Manager::getInstance()->getConnection($conn);
			
		$length = count($opponentdetails);
		$index = 0;
		
		while($index < $length)
		{
   			set_time_limit(600);
			if($opponentdetails[$index]["OPPONENT ID"])
			{
				$opponentId = $opponentdetails[$index]["OPPONENT ID"];
			}
				
			$opponentdetails[$index]["OPPONENT ID"] = $opponentId;
			$opponentdetails[$index]["Last Modified Time"] = $now;
				
			$opponentsdetailsobj[$index] = new OpponentsDetails();
			
			$opponentsdetailsobj[$index]->player_id = $playerId;
			$opponentsdetailsobj[$index]->opponent_id = $opponentId;
			$opponentsdetailsobj[$index]->game_flavour = $opponentdetails[$index]["Game Flavour"];
			$opponentsdetailsobj[$index]->games_played = $opponentdetails[$index]["Games Played"];
			$opponentsdetailsobj[$index]->total_time_played = $opponentdetails[$index]["Average Game Time(min)"]*$opponentdetails[$index]["Games Played"];
			$opponentsdetailsobj[$index]->opponent_games_won = $opponentdetails[$index]["Opponent Games Won"] ;
			$opponentsdetailsobj[$index]->player_games_won = $opponentdetails[$index]["Player Games Won"] ;
			$opponentsdetailsobj[$index]->sessions_played = $opponentdetails[$index]["Sessions Played"];
			$opponentsdetailsobj[$index]->opponent_sessions_won = $opponentdetails[$index]["Opponent Sessions Won"];
			$opponentsdetailsobj[$index]->player_sessions_won = $opponentdetails[$index]["Player Sessions Won"];
			$opponentsdetailsobj[$index]->opponent_real_bet = $opponentdetails[$index]["Opponent Real Bet"];
			$opponentsdetailsobj[$index]->opponent_bonus_bet = $opponentdetails[$index]["Opponent Bonus Bet"];
			$opponentsdetailsobj[$index]->player_real_bet = $opponentdetails[$index]["Player Real Bet"];
			$opponentsdetailsobj[$index]->player_bonus_bet = $opponentdetails[$index]["Player Bonus Bet"];
			$opponentsdetailsobj[$index]->opponent_real_winnings = $opponentdetails[$index]["Opponent Real Won"];
			$opponentsdetailsobj[$index]->opponent_bonus_winnings = $opponentdetails[$index]["Opponent Bonus Won"];
			$opponentsdetailsobj[$index]->player_real_winnings = $opponentdetails[$index]["Player Real Won"];
			$opponentsdetailsobj[$index]->player_bonus_winnings = $opponentdetails[$index]["Player Bonus Won"];
			$opponentsdetailsobj[$index]->last_modified_date = $opponentdetails[$index]["Last Modified Time"];
		
			try {
				$opponentsdetailsobj[$index]->save($partition);
			}
			catch(Exception $e)
			{
				echo $e;
				return false;
			}
			$opponentdetails[$index] == "";
			$index++;
		}
		
		return true;
	}
	
	public function getopponentsminilist($playerId)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
						->select('opp.opponent_id , sum(games_played) as games , sum(player_games_won) as won')
						->from('OpponentsDetails opp')
						->where('opp.player_id = ?',$playerId)
						->groupBy('opp.opponent_id');
						
		try 
		{
			$array = $query->fetchArray();
		}	
		catch(Exception $e)
		{
			return false;
		}
		
		return $array;
	}
	
	public function getopponentcompletedata($playerId , $opponentId)
	{
					
		
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
						->select('opp.opponent_id , sum(games_played) as games , sum(player_games_won) as playerwon ')
						->from('OpponentsDetails opp')
						->where('opp.player_id = ?',$playerId)
						->andWhere('opp.opponent_id =?' , $opponentId);						
		try 
		{
			$array["versesdetails"] = $query->fetchArray();
		}	
		catch(Exception $e)
		{
			$array["versesdetails"][0]["games"] == NULL;
			$array["versesdetails"][0]["playerwon"] == NULL;
		}
		
		$conn = Zenfox_Partition::getInstance()->getConnections($opponentId);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
						->select('opp.opponent_id , sum(games_played) as games , sum(player_games_won) as playerwon ')
						->from('OpponentsDetails opp')
						->where('opp.player_id = ?',$opponentId)
						->andWhere('opp.opponent_id =?' , $opponentId);						
		try 
		{
			$array["opponentdetails"] = $query->fetchArray();
		}	
		catch(Exception $e)
		{
			$array["opponentdetails"][0]["games"] == NULL;
			$array["opponentdetails"][0]["playerwon"] == NULL;
		}
		
		
		
		
		$player = new Player();
		$accountData = $player->getAccountDetails($opponentId);
		$playerData = $player->getPlayerData($opponentId);
		
		if($playerData["firstName"])
		{
			$opponentdetails["first name"] = $playerData["firstName"];
		}
		else 
		{
			$opponentdetails["first name"] = $accountData[0]["login"];
		}
		
		return  array(
				'opponentloginname' => $accountData[0]["login"],
				'opponentFirstName' => $opponentdetails["first name"],
				'versesGamesPlayed' => $array["versesdetails"][0]["games"],
				'versesGamesWon' => $array["versesdetails"][0]["playerwon"],
				'opponentGamesPlayed' => $array["opponentdetails"][0]["games"],
				'opponentGamesWon' => $array["opponentdetails"][0]["playerwon"]
				
		);
	}
}
		
