<?php

/**
 * BankDetails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class BankDetails extends BaseBankDetails
{
	public function getbankdetails($playerid)
	{
		$conns = Zenfox_Partition::getInstance()->getConnections($playerid);
		$partition  = Doctrine_Manager::getInstance()->setCurrentConnection($conns);
		
		$query = Zenfox_Query::create()
				->from('BankDetails  b')
				->where('b.player_id  = ?',$playerid)
				->orderBy('b.id desc');
		
		$result = $query->fetchArray();
		
		return $result;
		
		
	}
	
	public function getmaxbankid($playerid)
	{
		$conns = Zenfox_Partition::getInstance()->getConnections($playerid);
		$partition  = Doctrine_Manager::getInstance()->setCurrentConnection($conns);
	
		$query = Zenfox_Query::create()
		->from('BankDetails  b')
		->where('b.player_id  = ?',$playerid)
		->orderBy('b.id desc')
		->limit(1);
		
		$result = $query->fetchArray();
	
		return $result[0];
	
	
	}
	public function getbankminidetails($playerid)
	{
		$conns = Zenfox_Partition::getInstance()->getConnections($playerid);
		$partition  = Doctrine_Manager::getInstance()->setCurrentConnection($conns);
	
		$query = Zenfox_Query::create()
		->select('b.name, b.name_of_bank, b.branch, b.account_number ,b.ifsc_code')
		->from('BankDetails  b')
		->where('b.player_id  = ?',$playerid);
	
		$result = $query->fetchArray();
	
		return $result;
	
	
	}
	
	public function insertbankdetails($playerid,$nameasonbank,$bank,$BankAccountNumber,$ifsccode,$Branch)
	{
		
		$conns = Zenfox_Partition::getInstance()->getConnections($playerid);
		$partition  = Doctrine_Manager::getInstance()->getConnection($conns);
			
		$json[player_id] = $playerid;
		$json[name] = $nameasonbank;
		$json[name_of_bank] = $bank;
		$json[branch] = $Branch;
		$json[account_number] = $BankAccountNumber;
		$json[ifsc_code] = $ifsccode;
		
		$json = Zend_Json_Encoder::encode($json);	
		
		$this->player_id = $playerid;
		$this->name = $nameasonbank;
		$this->name_of_bank = $bank;
		$this->branch = $Branch;
		$this->account_number = $BankAccountNumber;
		$this->ifsc_code = $ifsccode;
		$this->json_details = $json;
		
		$this->save($partition);
	
	}
	
	public function searchbankdetails($searchingField,$searchString,$itemsPerPage,$offset,$session)
	{
		if($searchingField == "player_id")
        {
        			$query = "Zenfox_Query::create()
    					->from('BankDetails b')
    					->where('b.$searchingField LIKE ?', '$searchString')
    					->orderBy('player_id')";
        }
        else
        {
        	$query = "Zenfox_Query::create()
    					->from('BankDetails b')
    					->where('b.$searchingField LIKE ?', '%$searchString%')
    					->orderBy('player_id')";
        }
		
		
		$adapter = new Zenfox_Paginator_Adapter_DoctrineQuery($query, -1, $session);
    	$paginatorSession = new Zend_Session_Namespace('paginationCount');
		$paginatorSession->value = false;
    	$paginator =  new Zend_Paginator($adapter);
		$paginator->setItemCountPerPage($itemsPerPage);
		$paginator->setPageRange(2);
		$paginator->setCurrentPageNumber($offset);
		
		if($paginator->getTotalItemCount())
		{
			$bankdetails = array();
			$index = 0;
			//Zenfox_Debug::dump($paginator);exit;
			foreach($paginator as $logs)
			{
			
				$bankdetails[$index]['Player Id'] = $logs['player_id'];
				$bankdetails[$index]['First Name'] = $logs['name'];
				$bankdetails[$index]['Bank Name'] = $logs['name_of_bank'];
				$bankdetails[$index]['Account Number'] = $logs['account_number'];
				$bankdetails[$index]['Branch'] = $logs['branch'];
				$bankdetails[$index]['IFSC Code'] = $logs['ifsc_code'];
				$index++;
			}
			
			//Zenfox_Debug::dump($paginator);exit;
			$paginatorSession->unsetAll();
			return array($paginator, $bankdetails);
		}
		else
		{
			return false;
		}
	
	}
	
	
}