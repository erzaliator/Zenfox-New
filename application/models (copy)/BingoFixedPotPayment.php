<?php

/**
 * BingoFixedPotPayment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class BingoFixedPotPayment extends BaseBingoFixedPotPayment
{
	public function getData($gameId)
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		//$result = Doctrine::getTable('FixedPot')->findByGameId($gameId)->orderBy('part_id');
		$query = Zenfox_Query::create()
					->from('BingoFixedPotPayment fpp')
					->where('fpp.game_id = ?', $gameId)
					->orderBy('fpp.id');
					
		$result = $query->fetchArray();
		$fixedPotData = array();
		$i = 0;
		foreach($result as $data)
		{
			$fixedPotData[$i]['fixedPotId'] = $data['id'];
			$fixedPotData[$i]['gameId'] = $data['game_id'];
			$fixedPotData[$i]['partId'] = $data['part_id'];
			$fixedPotData[$i]['callNumber']= $data['call_number'];
			$fixedPotData[$i]['realAmount']= $data['real_amount'];
			$fixedPotData[$i]['bbsAmount'] = $data['bbs_amount'];
			$i++;
		}
		return $fixedPotData;
	}
	
	public function updateData($data)
	{	
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$length = count($data)-2;
		$index = 1;
		while($index <= $length)
		{
			$real = "RealAmount".$index;
			$bbs = "BbsAmount".$index;
			
			$query = Zenfox_Query::create()
					->update('BingoFixedPotPayment fpp')
					->set('fpp.part_id', '?', $data['partId'])
					->set('fpp.call_number', '?', $data[$index])
					->set('fpp.real_amount', '?', $data[$real])
					->set('fpp.bbs_amount', '?', $data[$bbs])
					->where('fpp.id = ?', $data['fixedPotId']);
					
			try
			{
				$query->execute();
			}
			catch(Exception $e)
			{
				print('Unable to update FixedPotPayment data') . $e;
				exit();
			}
			$index++;
		}
			
	
		return true;
	}
}
