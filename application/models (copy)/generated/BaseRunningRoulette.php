<?php

/**
 * BaseRunningRoulette
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $machine_name
 * @property string $game_flavour
 * @property string $description
 * @property string $denominations
 * @property float $max_bet
 * @property string $max_bet_string
 * @property enum $enabled
 * @property integer $machine_id
 * @property enum $pjp_enabled
 * @property enum $amount_type
 * @property Flavour $Flavour
 * @property Roulette $Roulette
 * @property Doctrine_Collection $gamelog_sessions
 * @property Doctrine_Collection $gamelog_roulettes
 * @property Doctrine_Collection $game_gamegroups
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BaseRunningRoulette extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('running_roulette');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('machine_name', 'string', 45, array(
             'type' => 'string',
             'length' => '45',
             ));
        $this->hasColumn('game_flavour', 'string', 45, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '45',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('denominations', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('max_bet', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('max_bet_string', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('enabled', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'ENABLED',
              1 => 'DISABLED',
             ),
             ));
        $this->hasColumn('machine_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('pjp_enabled', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'ENABLED',
              1 => 'DISABLED',
             ),
             'default' => 'DISABLED',
             ));
        $this->hasColumn('amount_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'REAL',
              1 => 'BONUS',
              2 => 'BOTH',
             ),
             ));
        $this->hasColumn('default_denomination', 'float', 4, array(
             'type' => 'float',
        	 'length' => '4',
             ));

        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasOne('Flavour', array(
             'local' => 'game_flavour',
             'foreign' => 'game_flavour'));

        $this->hasOne('Roulette', array(
             'local' => 'machine_id',
             'foreign' => 'machine_id'));

        $this->hasMany('GamelogSession as gamelog_sessions', array(
             'local' => 'id',
             'foreign' => 'machine_id'));

        $this->hasMany('GamelogRoulette as gamelog_roulettes', array(
             'local' => 'id',
             'foreign' => 'machine_id'));

        $this->hasMany('GameGamegroup as game_gamegroups', array(
             'local' => 'id',
             'foreign' => 'running_machine_id'));
    }
}