<?php

/**
 * BasePjp
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $pjp_name
 * @property string $description
 * @property string $currency
 * @property enum $bbs_enabled
 * @property float $bbs_pjp
 * @property float $real_pjp
 * @property integer $random_number
 * @property integer $seed
 * @property float $min_amount_bbs
 * @property float $min_amount_real
 * @property float $max_amount_bbs
 * @property float $max_amount_real
 * @property enum $reset_close
 * @property enum $closed
 * @property string $allowed_frontends
 * @property Currency $Currency
 * @property Doctrine_Collection $MachinesPjp
 * @property Doctrine_Collection $pjp_machines
 * @property Doctrine_Collection $GamelogRoulette
 * @property Doctrine_Collection $PjpAudit
 * @property Doctrine_Collection $bingo_pjps
 * @property Doctrine_Collection $BingoPjpLog
 * @property Doctrine_Collection $pjp_winners
 * @property Doctrine_Collection $GamelogKeno
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BasePjp extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('pjp');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('pjp_name', 'string', 45, array(
             'type' => 'string',
             'length' => '45',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('currency', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '3',
             ));
        $this->hasColumn('bbs_enabled', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'ENABLED',
              1 => 'DISABLED',
             ),
             'default' => 'ENABLED',
             ));
        $this->hasColumn('bbs_pjp', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('real_pjp', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('random_number', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('seed', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('min_amount_bbs', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('min_amount_real', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('max_amount_bbs', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('max_amount_real', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('reset_close', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'RESET',
              1 => 'CLOSE',
             ),
             'default' => 'CLOSE',
             ));
        $this->hasColumn('closed', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'CLOSE',
              1 => 'OPEN',
             ),
             'default' => 'CLOSE',
             ));
        $this->hasColumn('allowed_frontends', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));

        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasOne('Currency', array(
             'local' => 'currency',
             'foreign' => 'currency_code'));

        $this->hasMany('MachinesPjp', array(
             'local' => 'id',
             'foreign' => 'pjp_id'));

        $this->hasMany('PjpMachine as pjp_machines', array(
             'local' => 'id',
             'foreign' => 'pjp_id'));

        $this->hasMany('GamelogRoulette', array(
             'local' => 'id',
             'foreign' => 'pjp_id'));

        $this->hasMany('PjpAudit', array(
             'local' => 'id',
             'foreign' => 'pjp_id'));

        $this->hasMany('BingoPjp as bingo_pjps', array(
             'local' => 'id',
             'foreign' => 'pjp_id'));

        $this->hasMany('BingoPjpLog', array(
             'local' => 'id',
             'foreign' => 'pjp_id'));

        $this->hasMany('PjpWinner as pjp_winners', array(
             'local' => 'id',
             'foreign' => 'pjp_id'));

        $this->hasMany('GamelogKeno', array(
             'local' => 'id',
             'foreign' => 'pjp_id'));
    }
}