<?php

/**
 * BaseFrontend
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $site_code
 * @property string $contact
 * @property string $url
 * @property string $ams_url
 * @property string $gms_url
 * @property enum $status
 * @property integer $affiliate_frontend_id
 * @property string $allowed_frontend_ids
 * @property string $default_currency
 * @property string $secondary_currencies
 * @property string $extra_field1
 * @property string $extra_field2
 * @property string $extra_field3
 * @property integer $default_bonus_scheme_id
 * @property string $timezone
 * @property AffiliateFrontend $AffiliateFrontend
 * @property BonusScheme $BonusScheme
 * @property Currency $Currency
 * @property Doctrine_Collection $AccountDetail
 * @property Doctrine_Collection $gamegroup_frontends
 * @property Doctrine_Collection $Ticket
 * @property Doctrine_Collection $TicketData
 * @property Doctrine_Collection $GamelogSession
 * @property Doctrine_Collection $gms_group_frontends
 * @property Doctrine_Collection $GamelogRoulette
 * @property Doctrine_Collection $PlayerTransaction
 * @property Doctrine_Collection $AuditReport
 * @property Doctrine_Collection $affiliate_transactions
 * @property Doctrine_Collection $player_sessions
 * @property Doctrine_Collection $ClickTrack
 * @property Doctrine_Collection $GamelogKeno
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BaseFrontend extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('frontend');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('site_code', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '3',
             ));
        $this->hasColumn('contact', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('ams_url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('gms_url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'ENABLED',
              1 => 'DISABLED',
             ),
             ));
        $this->hasColumn('affiliate_frontend_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('allowed_frontend_ids', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('default_currency', 'string', 3, array(
             'type' => 'string',
             'notnull' => true,
             'fixed' => 1,
             'length' => '3',
             ));
        $this->hasColumn('secondary_currencies', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('extra_field1', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('extra_field2', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('extra_field3', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('default_bonus_scheme_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('timezone', 'string', 45, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '45',
             ));
        $this->hasColumn('languages', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));

        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasOne('AffiliateFrontend', array(
             'local' => 'affiliate_frontend_id',
             'foreign' => 'id'));

        $this->hasOne('BonusScheme', array(
             'local' => 'default_bonus_scheme_id',
             'foreign' => 'scheme_id'));

        $this->hasOne('Currency', array(
             'local' => 'default_currency',
             'foreign' => 'currency_code'));

        $this->hasMany('AccountDetail', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));

        $this->hasMany('GamegroupFrontend as gamegroup_frontends', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));

        $this->hasMany('Ticket', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));

        $this->hasMany('TicketData', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));

        $this->hasMany('GamelogSession', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));

        $this->hasMany('GmsGroupFrontend as gms_group_frontends', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));

        $this->hasMany('GamelogRoulette', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));

        $this->hasMany('PlayerTransaction', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));

        $this->hasMany('AuditReport', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));

        $this->hasMany('AffiliateTransaction as affiliate_transactions', array(
             'local' => 'id',
             'foreign' => 'player_frontend_id'));

        $this->hasMany('PlayerSession as player_sessions', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));

        $this->hasMany('ClickTrack', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));

        $this->hasMany('GamelogKeno', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));
        
        $this->hasMany('Banner', array(
             'local' => 'id',
             'foreign' => 'frontend_id'));
    }
}