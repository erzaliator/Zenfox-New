<?php

/**
 * BaseAffiliateTransaction
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $audit_id
 * @property integer $prev_audit_id
 * @property integer $player_audit_id
 * @property integer $source_id
 * @property integer $slave_id
 * @property integer $trans_type
 * @property float $amount
 * @property enum $amount_type
 * @property float $commission_amount
 * @property string $transaction_currency
 * @property string $affiliate_base_currency
 * @property float $base_currency_amount
 * @property float $conversion_rate
 * @property integer $affiliate_id
 * @property integer $player_id
 * @property integer $tracker_id
 * @property integer $scheme_id
 * @property integer $slab_id
 * @property float $master_contribution
 * @property integer $master_level
 * @property integer $master_id
 * @property timestamp $trans_start_time
 * @property timestamp $trans_end_time
 * @property float $affiliate_balance
 * @property float $tracker_earnings
 * @property enum $processed
 * @property enum $error
 * @property string $notes
 * @property integer $player_frontend_id
 * @property integer $affiliate_frontend_id
 * @property PlayerTransaction $PlayerTransaction
 * @property AffiliateSchemeDef $AffiliateSchemeDef
 * @property Affiliate $Affiliate
 * @property AffiliateFrontend $AffiliateFrontend
 * @property Frontend $Frontend
 * @property AuditReport $AuditReport
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BaseAffiliateTransaction extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('affiliate_transactions');
        $this->hasColumn('audit_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('prev_audit_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('player_audit_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('source_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('slave_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('trans_type', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('amount_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'REAL',
              1 => 'BONUS',
              2 => 'BOTH',
             ),
             ));
        $this->hasColumn('commission_amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('transaction_currency', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '3',
             ));
        $this->hasColumn('affiliate_base_currency', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '3',
             ));
        $this->hasColumn('base_currency_amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('conversion_rate', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('affiliate_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('player_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('tracker_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('scheme_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('slab_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('master_contribution', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('master_level', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('master_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('trans_start_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('trans_end_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('affiliate_balance', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('tracker_earnings', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('processed', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'PROCESSED',
              1 => 'UNPROCESSED',
              2 => 'STARTED',
             ),
             'default' => 'UNPROCESSED',
             ));
        $this->hasColumn('error', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'ERROR',
              1 => 'NOERROR',
             ),
             'default' => 'NOERROR',
             ));
        $this->hasColumn('notes', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('player_frontend_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('affiliate_frontend_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));

        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasOne('PlayerTransaction', array(
             'local' => 'source_id',
             'foreign' => 'source_id'));

        $this->hasOne('AffiliateSchemeDef', array(
             'local' => 'scheme_id',
             'foreign' => 'scheme_id'));

        $this->hasOne('Affiliate', array(
             'local' => 'affiliate_id',
             'foreign' => 'affiliate_id'));

        $this->hasOne('AffiliateFrontend', array(
             'local' => 'affiliate_frontend_id',
             'foreign' => 'id'));

        $this->hasOne('Frontend', array(
             'local' => 'player_frontend_id',
             'foreign' => 'id'));

        $this->hasOne('AuditReport', array(
             'local' => 'player_id',
             'foreign' => 'player_id'));
    }
}