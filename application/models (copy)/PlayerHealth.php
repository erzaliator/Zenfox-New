<?php

/**
 * PlayerHealth
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class PlayerHealth extends BasePlayerHealth
{
	public function gethealth($tagid, $reporttype, $starttime, $endtime , $offset = 0,$itemsperpage)
	{
		
		$authSession = new Zend_Auth_Storage_Session();
		$sessionData = $authSession->read();
		$csrId = $sessionData['id'];
        $csrfrontendids = $sessionData["frontend_ids"];
        
        $csrfrontendids = implode($csrfrontendids,",");
        
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		 Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		

		$query = "Zenfox_Query::create()
				->from('PlayerHealth p')
				->Where('p.report_type = ?', '$reporttype')
				->andWhereIn('s.frontend_id',array($csrfrontendids))
				->andWhere('p.start_time >= ?', '$starttime')
				->andWhere('p.end_time <= ?', '$endtime')";
		
		$adapter = new Zenfox_Paginator_Adapter_DoctrineQuery($query, 0);
		
		$paginatorSession = new Zend_Session_Namespace('paginationCount');
		$paginatorSession->value = false;
		$paginator =  new Zend_Paginator($adapter);
		$paginator->setItemCountPerPage($itemsperpage);
		$paginator->setPageRange(2);
		$paginator->setCurrentPageNumber($offset);
		$translate = Zend_Registry::get('Zend_Translate');
		
		$index = 0;
		if($paginator->getTotalItemCount())
		{
			foreach($paginator as $logs)
			{
				
				$health[$index] = $logs;
				
				$index++;
			}
			$paginatorSession->unsetAll();
			return array($paginator, $health);
		}
		
		return NULL;
	}
	
	public function getplayerrake($playerId,$starttime,$endtime)
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		 Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		 
		 
		 $query = Zenfox_Query::create()
		 			->select ('sum(ph.real_rake) as realrake , sum(ph.bonus_rake) as bonusrake')
		 			->from('PlayerHealth ph')
		 			->where('ph.player_id =?' , $playerId)
		 			->andWhere('ph.start_time >= ?', $starttime)
					->andWhere('ph.end_time <= ?', $endtime);
					
				try
				{
					$result = $query->fetchArray();
				}
				catch(Exception $e)
				{
					Zenfox_Debug::dump($e, 'exception', true, true);
				}

		return $result;
		
	}
}