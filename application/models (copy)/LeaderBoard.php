<?php

/**
 * LeaderBoard
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class LeaderBoard extends BaseLeaderBoard
{
	public function getroomdata($roomId , $activeLeaderboard = false)
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		
		$query = Zenfox_Query::create()
				->from('LeaderBoard lb')
				->Where('lb.room_id  = ?',$roomId);
		try 
		{
			$result = $query->fetchArray();
		}		
		catch (Exception $e)
		{
			echo $e;
			return false;
		}
		
		$games = $result[0]["allowed_games"];
		//Zenfox_Debug::dump($games);exit;

		$result[0]["selected_games"] = explode(",",$games);
		
		
		
		if($activeLeaderboard)
		{
			$result[0]["ActiveLeaderboard"] = true;
		} 
		else
		{
			$startdate = new Zend_Date($result[0]['start_date']);
		
			$enddate = new Zend_Date($result[0]['end_date']);
		
			$today = new Zend_Date();

				
			$difference = $enddate->sub($today)->toValue();
				
			$daydifference = floor($difference/(60*60*24));
		
			//Zenfox_Debug::dump($result);exit;
				
			if($daydifference >= 0)
			{
				$result[0]["ActiveLeaderboard"] = true;
			}
			else
			{
				$result[0]["ActiveLeaderboard"] = false;
			}
		}
		
			
		return $result[0];
	}
	
	public function getalldata()
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$runningroomsobj = new BingoRoom();
		$allrooms = $runningroomsobj->getAllRooms();
		foreach($allrooms as $roomdata)
        {
        	$rooms[$roomdata["id"]] = $roomdata["name"];
        }
		
		$query = Zenfox_Query::create()
				->from('LeaderBoard lb');
				
		try 
		{
			$result = $query->fetchArray();
		}		
		catch (Exception $e)
		{
			echo $e;
			return false;
		}
		
		$index = 0;
		foreach ($result as $data)
		{
			$finaldata[$index]["Room Id"] = $data["room_id"];
			$finaldata[$index]["Room Name"] = $rooms[$data["room_id"]];
			$finaldata[$index]["Leader Board Title"] = $data["name"];
			$finaldata[$index]["Part Wise Points"] = $data["part_wise_points"];
			$finaldata[$index]["Start Date"] = $data["start_date"];
			$finaldata[$index]["End Date"] = $data["end_date"];
			$finaldata[$index]["Allowed Games"] = $data["allowed_games"];
			$finaldata[$index]["Description"] = $data["description"];
			$index++;
		}
		
		//Zenfox_Debug::dump($finaldata);exit;
		return $finaldata;
	}
	
	public function updatedata($roomId, $data)
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		
		//Zenfox_Debug::dump($allowedgames);exit;
		
		$query = Zenfox_Query::create()
				->update('LeaderBoard lb')
				->set('lb.name', '?',$data["Title"])
				->set('lb.part_wise_points', '?',$data["partWisePoints"])
				->set('lb.start_date', '?',$data["startdate"])
				->set('lb.end_date', '?',$data["enddate"])
				->set('lb.description', '?',$data["description"])
				->set('lb.allowed_games', '?',$data["allowedGames"])
				->where('lb.room_id =?' , $roomId);
				
			try
			{
				$query->execute();
			}
			catch (Exception $e)
			{
				Zenfox_Debug::dump($e,'exception',true.true);
				return false;
			}
			return true;
	}
	
	public function insertdata($data)
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		
		
		$this->room_id = $data["RoomId"];
		$this->name = $data["Title"];
		$this->part_wise_points = $data["partWisePoints"];
		$this->start_date = $data["startdate"];
		$this->end_date = $data["enddate"];
		$this->description = $data["description"];
		$this->allowed_games = $data["allowedGames"];
		
			try
			{
				$this->save();
			}
			catch (Exception $e)
			{
				Zenfox_Debug::dump($e,'exception',true.true);
				return false;
			}
			return true;
	}
	
	public function getleaderboard($roomId,$activeLeaderBoard = false)
	{
		$dataBaseData = $this->getroomdata($roomId,$activeLeaderBoard);
				
		$bingogameobj = new BingoGame();
		$totalallowedgames = count($dataBaseData["selected_games"]);
		$index = 0;
		while($index < $totalallowedgames)
		{
			$allowedgames[$index] = $bingogameobj->getData($dataBaseData["selected_games"][$index]);
			$allowedgamesnames[$index] = $allowedgames[$index]["name"];
			$index++;
		}
				
		$leaderboardTitle = $dataBaseData["name"];
			
				//Zenfox_Debug::dump($dataBaseData["ActiveLeaderboard"]);exit;
		if($dataBaseData["ActiveLeaderboard"])
		{
			$bingogamelogobj = new BingoGamelog();
			if($dataBaseData["part_wise_points"] == "DISPLAY")
			{
				
				$gamelogIds = $bingogamelogobj->getgamelogids($dataBaseData['start_date'] , $dataBaseData['end_date'], $roomId,$dataBaseData["selected_games"]);

					//Zenfox_Debug::dump($gamelogIds);exit;
					
					if($gamelogIds)
					{
						foreach($gamelogIds as $id)
						{
							$Ids[] = $id["gamelog_id"];
						}
			
						$bingowinnersobj = new BingoWinners();
						$data = $bingowinnersobj->getdatabygamelogid($Ids);
				
						$length = count($data);
						$index = 0;
					
						
						$accountdetailsobj = new AccountDetail();
						while($index < $length)
						{
							try
							{
								$partdata = Zend_Json_Decoder::decode($data[$index]["winning_cards"]);
							}
							catch(Exception $e)
							{
								echo $e;
							}
						
							//Zenfox_Debug::dump($data[$index]);
							$playercount = count($partdata[0]);
							$secondindex = 0;

						
							while($secondindex < $playercount)
							{
								$playerId = $partdata[0][$secondindex]["playerId"];

								if(!$playerdata[$playerId]["Player Name"])
								{
									
									$details = $accountdetailsobj->getDetails($playerId) ;
									$playerdata[$playerId]["Player Name"] = $details["login"]; 
									//$playerdata[$playerId]["Player Id"] = $playerId; 
								}
								
									if($data[$index]["part_id"] == 0)
									{
										
										$playerdata[$playerId]["Any One Line"] = $playerdata[$playerId]["Any One Line"] +1;
										if($playerdata[$playerId]["Any Two Line"])
										{
											$playerdata[$playerId]["Any Two Line"] = $playerdata[$playerId]["Any Two Line"];
										}
										else
										{
											$playerdata[$playerId]["Any Two Line"] = 0;
										}
										
										if($playerdata[$playerId]["Full House"])
										{
											$playerdata[$playerId]["Full House"] = $playerdata[$playerId]["Full House"];
										}
										else
										{
											$playerdata[$playerId]["Full House"] = 0;
										}
										
										
										$playerdata[$playerId]["Total Points"] = $playerdata[$playerId]["Total Points"] +1;
									}
									elseif($data[$index]["part_id"] == 1)
									{
										if($playerdata[$playerId]["Any One Line"])
										{
											$playerdata[$playerId]["Any One Line"] = $playerdata[$playerId]["Any One Line"];
										}
										else
										{
											$playerdata[$playerId]["Any One Line"] = 0;
										}
										
										$playerdata[$playerId]["Any Two Line"] = $playerdata[$playerId]["Any Two Line"] + 2;
									
										
										if($playerdata[$playerId]["Full House"])
										{
											$playerdata[$playerId]["Full House"] = $playerdata[$playerId]["Full House"];
										}
										else
										{
											$playerdata[$playerId]["Full House"] = 0;
										}
										$playerdata[$playerId]["Total Points"] = $playerdata[$playerId]["Total Points"] +2;
									}
									elseif($data[$index]["part_id"] == 2)
									{
										if($playerdata[$playerId]["Any One Line"])
										{
											$playerdata[$playerId]["Any One Line"] = $playerdata[$playerId]["Any One Line"];
										}
										else
										{
											$playerdata[$playerId]["Any One Line"] = 0;
										}
										
										if($playerdata[$playerId]["Any Two Line"])
										{
											$playerdata[$playerId]["Any Two Line"] = $playerdata[$playerId]["Any Two Line"];
										}
										else
										{
											$playerdata[$playerId]["Any Two Line"] = 0;
										}

										$playerdata[$playerId]["Full House"] = $playerdata[$playerId]["Full House"] + 3;
										
										$playerdata[$playerId]["Total Points"] = $playerdata[$playerId]["Total Points"] +3;
									}
								
								
								$secondindex++;
							}
						
							$index++;
						}
		
						
					}
				}
				else
				{
					$allowedgamesindex = 0;
					while($allowedgamesindex < $totalallowedgames)
					{
						$gamelogIds = $bingogamelogobj->getgamelogids($dataBaseData['start_date'] , $dataBaseData['end_date'], $roomId,$dataBaseData["selected_games"][$allowedgamesindex]);
						
					//	Zenfox_Debug::dump($gamelogIds);
						if($gamelogIds)
						{
							$Ids = array();
							foreach($gamelogIds as $id)
							{
								$Ids[] = $id["gamelog_id"];
							}
							
							$data= array();
							$bingowinnersobj = new BingoWinners();
							$data = $bingowinnersobj->getdatabygamelogid($Ids);
				
							//Zenfox_Debug::dump($data);
							$length = count($data);
							$index = 0;
					
						
							$accountdetailsobj = new AccountDetail();
							while($index < $length)
							{
								try
								{
									$partdata = Zend_Json_Decoder::decode($data[$index]["winning_cards"]);
								}
								catch(Exception $e)
								{
									echo $e;
								}
						
								//Zenfox_Debug::dump($data[$index]);
								$playercount = count($partdata[0]);
								$secondindex = 0;

						
								while($secondindex < $playercount)
								{
									$playerId = $partdata[0][$secondindex]["playerId"];

									if(!$playerdata[$playerId]["Player Name"])
									{
										$details = $accountdetailsobj->getDetails($playerId) ;
										$playerdata[$playerId]["Player Name"] = $details["login"]; 
										//$playerdata[$playerId]["Player Id"] = $playerId; 
									}
							
								//	Zenfox_Debug::dump($playerdata);
									$allowedgamessecondindex = 0;
									while($allowedgamessecondindex < $totalallowedgames)
									{
	
										if($allowedgamesnames[$allowedgamesindex] == $allowedgamesnames[$allowedgamessecondindex])
										{
											$playerdata[$playerId][$allowedgamesnames[$allowedgamesindex]] = $playerdata[$playerId][$allowedgamesnames[$allowedgamesindex]] +1;
										}
										else 
										{
											if($playerdata[$playerId][$allowedgamesnames[$allowedgamessecondindex]])
											{
												$playerdata[$playerId][$allowedgamesnames[$allowedgamessecondindex]] = $playerdata[$playerId][$allowedgamesnames[$allowedgamessecondindex]];
											}
											else
											{
												$playerdata[$playerId][$allowedgamesnames[$allowedgamessecondindex]] = 0;
											}
										}
										$allowedgamessecondindex++;
									}
									$playerdata[$playerId]["Total Points"] = $playerdata[$playerId]["Total Points"] +1;
								
									//Zenfox_Debug::dump($playerdata);
									$secondindex++;
								}
						
								$index++;
							}
						
						}
					
						$allowedgamesindex++;
					}
					
					
				}
				
				$playerdata = array_values($playerdata);
			
						$length = count($playerdata);
			
						$index = 0;
						$secondindex =0;
						$thirdindex = 0;
						
						while($index < $length)
						{
							$secondindex = $index +1;
				
							while($secondindex < $length)
							{
								if($playerdata[$index]["Total Points"] < $playerdata[$secondindex]["Total Points"])
								{
									$temp = $playerdata[$index];
									$playerdata[$index] = $playerdata[$secondindex];
									$playerdata[$secondindex] = $temp;
								}
								$secondindex++;
							}
			
							if($index  < 25)
							{
				
									$leaderboarddata[$thirdindex] = $playerdata[$index];
									$thirdindex++;
							}
							else
							{
								break;
							}
							$index++;
						}
		
						return array($leaderboarddata,$leaderboardTitle);
			}
			else
			{
				return false;
			}
	}
	
}
