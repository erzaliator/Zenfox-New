<?php

/**
 * Affiliate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class Affiliate extends BaseAffiliate
{
	public function getAffiliates()
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
					->from('Affiliate');
					
		$result = $query->fetchArray();
		return $result;
	}
	
	public function getAffiliate($id)
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
				 ->from('Affiliate a')
				 ->where('a.affiliate_id = ?' , $id);
		$result = $query->fetchArray();				
		return array(
				'affiliateId' => $result[0]['affiliate_id'],
				'alias' => $result[0]['alias'],
				'passWord' => $result[0]['passwd'],
				'firstName' => $result[0]['firstname'],
				'lastName' => $result[0]['lastname'],
				'company' => $result[0]['company'],
				'address' => $result[0]['address'],
				'city' => $result[0]['city'],
				'state' => $result[0]['state'],
				'country' => $result[0]['country'],
				'zip' => $result[0]['zip'],
				'email' => $result[0]['email'],
				'phone' => $result[0]['phone'],
				'paymentType' => $result[0]['payment_type'],
				'masterId' => $result[0]['master_id'],
				'created' => $result[0]['created'],
				'enabled' => $result[0]['enabled'],
				//'language' => $result[0]['language'],
				'affiliateFrontendId' => $result[0]['affiliate_frontend_id'],
				'balance' => $result[0]['balance'],
				/*'creditMasterContribution' => $result[0]['credit_master_contribution'],
				'debitMasterContribution' => $result[0]['debit_master_contribution'],
				'creditSlaveContribution' => $result[0]['credit_slave_contribution'],
				'debitSlaveContribution' => $result[0]['debit_slave_contribution'],
				'buddyBalance' => $result[0]['buddy_balance'],
				'baseCurrency' => $result[0]['affiliate_base_currency']*/
		);
	}
	
	public function getMatchedAffiliates($searchingField, $offset, $itemsPerPage, $searchString = NULL , $match,$order)
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		if(!$searchString)
    	{
    		$query = "Zenfox_Query::create()
    					->from('Affiliate a')
    					->orderBy('a.affiliate_id $order')";
    	}
    	elseif($searchingField != 'tracker_name')
    	{
    		if(!$match)
    		{
    			$query = "Zenfox_Query::create()
    					->from('Affiliate a')
    					->where('a.$searchingField LIKE ?', '$searchString%')
    					->orderBy('a.$searchingField $order')";
    		}
    		else
    		{
    			$query = "Zenfox_Query::create()
    					->from('Affiliate a')
    					->where('a.$searchingField = ?', $searchString)
    					->orderBy('a.$searchingField $order')";    			
    		}
    		
    	}
    	elseif($searchingField == 'tracker_name')
    	{    		
    		$result = Doctrine::getTable('AffiliateTracker')->findOneByTracker_name($searchString);
    		$affiliateId = $result['affiliate_id'];    		
    		$query = "Zenfox_Query::create()
    					->from('Affiliate a')
    					->where('a.affiliate_id = ?', $affiliateId)";    					
    	}    	
    	$adapter = new Zenfox_Paginator_Adapter_DoctrineQuery($query, 0);
    	$paginatorSession = new Zend_Session_Namespace('paginationCount');
		$paginatorSession->value = false;
    	$paginator =  new Zend_Paginator($adapter);
		$paginator->setItemCountPerPage($itemsPerPage);
		$paginator->setPageRange(2);
		$paginator->setCurrentPageNumber($offset);
		if(!$paginator)
		{
			return false;
		}
		$translate = Zend_Registry::get('Zend_Translate');
		$translate = Zend_Registry::get('Zend_Translate');
		if($paginator->getTotalItemCount())
		{
			foreach($paginator as $logs)
			{
				$table[$index][$translate->translate('Id')] = $logs['affiliate_id'];	
				$table[$index][$translate->translate('Alias')] = $logs['alias'];
				$table[$index][$translate->translate('Email')] = $logs['email'];						
				$index++;
			}
		}
		$paginatorSession->unsetAll();
		return array($paginator, $table);		
	}
	
	public function getAliasFromAffiliateId($id)
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$result = Doctrine::getTable('Affiliate')->findOneByAffiliate_id($id);
		
		return $result['alias'];
	}
	
	public function getAllSubAffiliates($affiliateId)
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
					->from('Affiliate a')
					->where('master_id = ?',$affiliateId);
		
		$result = $query->fetchArray();
		
		return $result;
	}
}
