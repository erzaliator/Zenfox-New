<?php

/**
 * BaseBingoGame
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $game_flavour
 * @property enum $game_type
 * @property enum $amount_type
 * @property enum $pot_type
 * @property integer $pattern_id
 * @property float $card_price
 * @property integer $min_cards
 * @property integer $max_cards
 * @property string $free_ratio
 * @property integer $buy_time
 * @property integer $call_delay
 * @property enum $pjp_enabled
 * @property enum $prebuy_enabled
 * @property float $real_return
 * @property float $bbs_return
 * @property float $min_variable_pot_real
 * @property float $max_variable_pot_real
 * @property float $min_variable_pot_bbs
 * @property float $max_variable_pot_bbs
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BaseBingoGame extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('bingo_game');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             'fixed' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('game_flavour', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('game_type', 'enum', 8, array(
             'type' => 'enum',
             'length' => 8,
             'fixed' => false,
             'values' => 
             array(
              0 => 'VARIABLE',
              1 => 'FIXED',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('amount_type', 'enum', 4, array(
             'type' => 'enum',
             'length' => 4,
             'fixed' => false,
             'values' => 
             array(
              0 => 'REAL',
              1 => 'BBS',
              2 => 'BOTH',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('pot_type', 'enum', 8, array(
             'type' => 'enum',
             'length' => 8,
             'fixed' => false,
             'values' => 
             array(
              0 => 'SEPARATE',
              1 => 'COMBINED',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('pattern_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('card_price', 'float', null, array(
             'type' => 'float',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('min_cards', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('max_cards', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('free_ratio', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             'fixed' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('buy_time', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => false,
             'default' => '60',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('call_delay', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => false,
             'default' => '2',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('pjp_enabled', 'enum', 8, array(
             'type' => 'enum',
             'length' => 8,
             'fixed' => false,
             'values' => 
             array(
              0 => 'ENABLED',
              1 => 'DISABLED',
             ),
             'primary' => false,
             'default' => 'DISABLED',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('prebuy_enabled', 'enum', 8, array(
             'type' => 'enum',
             'length' => 8,
             'fixed' => false,
             'values' => 
             array(
              0 => 'ENABLED',
              1 => 'DISABLED',
             ),
             'primary' => false,
             'default' => 'ENABLED',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('real_return', 'float', null, array(
             'type' => 'float',
             'unsigned' => 0,
             'primary' => false,
             'default' => '80',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('bbs_return', 'float', null, array(
             'type' => 'float',
             'unsigned' => 0,
             'primary' => false,
             'default' => '80',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('min_variable_pot_real', 'float', null, array(
             'type' => 'float',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('max_variable_pot_real', 'float', null, array(
             'type' => 'float',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('min_variable_pot_bbs', 'float', null, array(
             'type' => 'float',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('max_variable_pot_bbs', 'float', null, array(
             'type' => 'float',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

}