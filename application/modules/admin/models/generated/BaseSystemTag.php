<?php

/**
 * BasesystemTag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $tag
 * @property string $description
 * @property string $script_path
 * @property string $script_vars
 * @property enum $script_language
 * @property enum $script_type
 * @property Doctrine_Collection $system_healths
 * @property Doctrine_Collection $script_logs
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BaseSystemTag extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('system_tags');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('tag', 'string', 45, array(
             'type' => 'string',
             'unique' => true,
             'fixed' => 1,
             'length' => '45',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('script_path', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('script_vars', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('script_language', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'SQL',
              1 => 'PYTHON',
              2 => 'PHP',
              3 => 'JAVA',
             ),
             ));
        $this->hasColumn('script_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'EOH',
              1 => 'EOD',
              2 => 'EOW',
              3 => 'EOM',
              4 => 'DB',
              5 => 'OTHER',
             ),
             ));

        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasMany('SystemHealth as system_healths', array(
             'local' => 'id',
             'foreign' => 'tag_id'));

        $this->hasMany('scriptLog as script_logs', array(
             'local' => 'id',
             'foreign' => 'script_id'));
    }
}