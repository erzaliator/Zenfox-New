<?php

/**
 * BaseEmailTemplate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property enum $category
 * @property integer $frontend_id
 * @property string $subject
 * @property clob $body
 * @property frontend $frontend
 * @property Doctrine_Collection $email_logs
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BaseEmailTemplate extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('email_template');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
        	 'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '45',
             ));
        $this->hasColumn('category', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'FORGOT_PASSWORD',
              1 => 'CONFIRMATION',
              2 => 'NOTIFICATION',
             ),
             ));
        $this->hasColumn('frontend_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('subject', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('body', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));


        $this->index('fk_frontend_id', array(
             'fields' => 
             array(
              0 => 'frontend_id',
             ),
             ));
        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasOne('frontend', array(
             'local' => 'frontend_id',
             'foreign' => 'id'));

        $this->hasMany('emailLog as email_logs', array(
             'local' => 'id',
             'foreign' => 'template_id'));
    }
}
