<?php

/**
 * LoyaltyToBonus
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class LoyaltyToBonus extends BaseLoyaltyToBonus
{
	public function addRecords($data)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($data['playerId']);
		$partition = Doctrine_Manager::getInstance()->getConnection($conn);
		
		$date = new Zend_Date();
		$today = $date->get(Zend_Date::W3C);
		
		$this->player_id = $data['playerId'];
		$this->converted_lp = $data['convertedLP'];
		$this->prev_lp = $data['prevLP'];
		$this->current_lp = $data['currentLP'];
		$this->conversion_time = $today;
		$this->level_id = $data['levelId'];
		$this->bonus = $data['bonus'];
		
		try
		{
			$this->save($partition);
		}
		catch(Exception $e)
		{
			//Zenfox_Debug::dump($e, 'exception', true, true);
			return false;
		}
		
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
					->from('LoyaltyToBonus l')
					->where('l.player_id = ?', $data['playerId'])
					->orderBy('l.id desc')
					->limit(1);
		
		try
		{
			$result = $query->fetchArray();
		}
		catch(Exception $e)
		{
			//Zenfox_Debug::dump($e, 'exception', true, true);
			return false;
		}
		return $result[0]['id'];
	}
	
	public function updateSourceId($playerId, $id, $sourceId)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
					->update('LoyaltyToBonus l')
					->set('l.source_id', '?', $sourceId)
					->where('l.id = ?', $id);
		
		try
		{
			$query->execute();
		}
		catch(Exception $e)
		{
			//Zenfox_Debug::dump($e, 'exception', true, true);
			return false;
		}
		return true;
	}
	
	public function getConvertedLoyaltyPoints($playerId, $time)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
					->select('sum(converted_lp) as lp')
					->from('LoyaltyToBonus l')
					->where('l.player_id = ?', $playerId)
					->andWhere('l.conversion_time >= ?', $time);
		
		try
		{
			$result = $query->fetchArray();
		}
		catch(Exception $e)
		{
			Zenfox_Debug::dump($e, 'exception', true, true);
			return false;
		}
		
		return $result[0]['lp'];
	}
}
