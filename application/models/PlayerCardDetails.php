<?php

/**
 * PlayerCardDetails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class PlayerCardDetails extends BasePlayerCardDetails
{
	public function addCardDetail($playerId, $cardData)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		//$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		$partition = Doctrine_Manager::getInstance()->getConnection($conn);
		
		$secretKey = $cardData['secretKey'];
		$clientIpAddress = Zend_Controller_Front::getInstance()->getRequest()->getClientIp();
		
		$aesCtr = new AesCtr();
		$cardNo = $aesCtr->encrypt($cardData['cardNo'], $secretKey, 256);
		$cvcNo = $aesCtr->encrypt($cardData['cvcNo'], $secretKey, 256);
		$exYear = $aesCtr->encrypt($cardData['exYear'], $secretKey, 256);
		$exMonth = $aesCtr->encrypt($cardData['exMonth'], $secretKey, 256);
		$issueNo = '';
		$valMonth = '';
		$valYear = '';
		if($cardData['issueNo'])
		{
			$issueNo = $aesCtr->encrypt($cardData['issueNo'], $secretKey, 256);
		}
		if($cardData['valMonth'])
		{
			$valMonth = $aesCtr->encrypt($cardData['valMonth'], $secretKey, 256);
			$valYear = $aesCtr->encrypt($cardData['valYear'], $secretKey, 256);
		}
		
		$this->player_id = $playerId;
		$this->card_holder_first_name = $cardData['firstName'];
		$this->card_holder_last_name = $cardData['lastName'];
		$this->card_holder_address = $cardData['address'];
		$this->card_holder_city = $cardData['city'];
		$this->card_holder_state = $cardData['state'];
		$this->card_holder_zip = $cardData['zip'];
		$this->card_holder_country = $cardData['country'];
		$this->card_holder_ip = $clientIpAddress;
		$this->card_no = $cardNo;
		$this->card_cvc_no = $cvcNo;
		$this->card_expiry_month = $exMonth;
		$this->card_expiry_year = $exYear;
		$this->card_issue_number = $issueNo;
		$this->card_type = $cardData['type'];
		$this->card_subtype = $cardData['subType'];
		$this->card_valid_month = $valMonth;
		$this->card_valid_year = $valYear;
		
		try
		{
			$this->save($partition);
		}
		catch(Exception $e)
		{
			//Zenfox_Debug::dump($e, 'e', true, true);
		}
		
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		$query = Zenfox_Query::create()
					->select('pc.id')
					->from('PlayerCardDetails pc')
					->where('pc.player_id = ?', $playerId)
					->andWhere('pc.card_no = ?', $cardNo)
					->andWhere('pc.card_cvc_no = ?', $cvcNo)
					->andWhere('pc.card_expiry_month = ?', $exMonth)
					->andWhere('pc.card_expiry_year = ?', $exYear);
		
		try
		{
			$result = $query->fetchArray();
		}
		catch(Exception $e)
		{
			//Zenfox_Debug::dump($e, 'exception', true, true);
		}
		if($result)
		{
			return $result[0]['id'];
		}
		return NULL;
	}
	
	public function getCardDetails($playerId, $secretKey)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		//$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
					->from('PlayerCardDetails pcd')
					->where('pcd.player_id = ?', $playerId);
		
		$module = Zend_Controller_Front::getInstance()->getRequest()->getModuleName();
		{
			if($module == 'player')
			{
				$query = $query->andWhere('pcd.enabled = ?', 'ENABLED');
			}
		}
		
		try
		{
			$result = $query->fetchArray();
		}
		catch(Exception $e)
		{
			//Zenfox_Debug::dump($e, 'e', true, true);
		}
		
		$aesCtr = new AesCtr();
		$cardDetail = array();
		foreach($result as $cardData)
		{
			if($cardData['card_no'])
			{
				$cardData['card_no'] = $aesCtr->decrypt($cardData['card_no'], $secretKey, 256);
			}
			if($cardData['card_expiry_year'])
			{
				$cardData['card_expiry_year'] = $aesCtr->decrypt($cardData['card_expiry_year'], $secretKey, 256);
			}
			if($cardData['card_expiry_month'])
			{
				$cardData['card_expiry_month'] = $aesCtr->decrypt($cardData['card_expiry_month'], $secretKey, 256);
			}
			if($cardData['card_cvc_no'])
			{
				$cardData['card_cvc_no'] = $aesCtr->decrypt($cardData['card_cvc_no'], $secretKey, 256);
			}
			if($cardData['card_valid_year'])
			{
				$cardData['card_valid_year'] = $aesCtr->decrypt($cardData['card_valid_year'], $secretKey, 256);
			}
			if($cardData['card_valid_month'])
			{
				$cardData['card_valid_month'] = $aesCtr->decrypt($cardData['card_valid_month'], $secretKey, 256);
			}
			if($cardData['card_issue_number'])
			{
				$cardData['card_issue_number'] = $aesCtr->decrypt($cardData['card_issue_number'], $secretKey, 256);
			}
			$cardDetail[] = $cardData;
		}
		$result = $cardDetail;
		return $result;
	}
	
	public function getCardDetailsById($cardId, $playerId, $secretKey)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);		
		//$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
					->from('PlayerCardDetails pcd')
					->where('pcd.id = ?', $cardId)
					->andWhere('pcd.player_id = ?', $playerId)
					->andWhere('pcd.enabled = ?', 'ENABLED');
		
		try
		{
			$result = $query->fetchArray();
		}
		catch(Exception $e)
		{
			//Zenfox_Debug::dump($e, 'e', true, true);
		}
		
		$aesCtr = new AesCtr();
		$cardDetail = array();
		foreach($result as $cardData)
		{
			if($cardData['card_no'])
			{
				$cardData['card_no'] = $aesCtr->decrypt($cardData['card_no'], $secretKey, 256);
			}
			if($cardData['card_expiry_year'])
			{
				$cardData['card_expiry_year'] = $aesCtr->decrypt($cardData['card_expiry_year'], $secretKey, 256);
			}
			if($cardData['card_expiry_month'])
			{
				$cardData['card_expiry_month'] = $aesCtr->decrypt($cardData['card_expiry_month'], $secretKey, 256);
			}
			if($cardData['card_cvc_no'])
			{
				$cardData['card_cvc_no'] = $aesCtr->decrypt($cardData['card_cvc_no'], $secretKey, 256);
			}
			if($cardData['card_valid_year'])
			{
				$cardData['card_valid_year'] = $aesCtr->decrypt($cardData['card_valid_year'], $secretKey, 256);
			}
			if($cardData['card_valid_month'])
			{
				$cardData['card_valid_month'] = $aesCtr->decrypt($cardData['card_valid_month'], $secretKey, 256);
			}
			if($cardData['card_issue_number'])
			{
				$cardData['card_issue_number'] = $aesCtr->decrypt($cardData['card_issue_number'], $secretKey, 256);
			}
			$cardDetail[] = $cardData;
		}
		$result = $cardDetail;
		return $result[0];
	}
	
	public function updateCardDetail($cardId, $playerId, $cardToken, $secretKey)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$aesCtr = new AesCtr();
		$cardToken = $aesCtr->encrypt($cardToken, $secretKey, 256);
		
		$query = Zenfox_Query::create()
					->update('PlayerCardDetails pc')
					->set('pc.card_access_token', '?', $cardToken)
					->where('pc.id = ?', $cardId)
					->andWhere('pc.player_id = ?', $playerId);
		
		try
		{
			$query->execute();
		}
		catch(Exception $e)
		{
			//Zenfox_Debug::dump($e, 'exception', true, true);
		}
	}
	
	public function changeStatus($cardId, $playerId, $status)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
					->update('PlayerCardDetails pc')
					->set('pc.enabled', '?', $status)
					->where('pc.id = ?', $cardId)
					->andWhere('pc.player_id = ?', $playerId);
		
		try
		{
			$query->execute();
		}
		catch(Exception $e)
		{
			//Zenfox_Debug::dump($e, 'exception', true, true);
		}
	}
}