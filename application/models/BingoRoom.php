<?php

/**
 * bingoRoom
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class BingoRoom extends BaseBingoRoom
{
	public function getLatestInsertData()
	{
		$conn = Zenfox_Partition::getInstance()->getCommonConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
						->from('BingoRoom br')
						->orderBy('br.id DESC')
						->limit(1);
						
		try
		{
			$result = $query->fetchArray();
		}
		catch(Exception $e)
		{
			return false;
		}
		return $result[0]['id'];
	}
	
	public function getAllRooms()
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
						->from('BingoRoom');
						
		try
		{
			$result = $query->fetchArray();
		}
		catch(Exception $e)
		{
			return false;
		}
		return $result;
	}
	
	public function getRoomData($bingoRoomId)
	{
		$conn = Zenfox_Partition::getInstance()->getCommonConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
						->from('BingoRoom br')
						->where('br.id = ?', $bingoRoomId);
						
		try
		{
			$result = $query->fetchArray();
		}
		catch(Exception $e)
		{
			return false;
		}
		return array(
				'bingoRoomId' => $result[0]['id'],
				'name' => $result[0]['name'],
				'description' => $result[0]['description'],
				'gameFlavours' => $result[0]['allowed_game_flavours'],
				'roomCurrency' => $result[0]['currency'],
				'enabled' => $result[0]['enabled']
		);
	}
	
	public function changestatus($roomId,$status)
	{
		$conn = Zenfox_Partition::getInstance()->getMasterConnection();
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
    					->update('BingoRoom br')
    					->set('br.enabled', '?', $status)
    					->where('br.id = ?', $roomId);
    					
		try
		{
			$query->execute();
		}
		catch(Exception $e)
		{
			print('Unable to update Status') . $e;
		}
	}
}