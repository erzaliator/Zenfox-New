<?php

/**
 * AccountVariable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class AccountVariable extends BaseAccountVariable
{
	public function insert($data)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($data['playerId']);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$accountVariable = new AccountVariable();
		
		//Zenfox_Debug::dump($data, 'data', true, true);
		$variableData = $this->getData($data['playerId'], $data['variableName']);
		$varId = $variableData['varId'];
		if($varId)
		{
			$data['varId'] = $varId; 
			$update = $this->update($data);
			return $update;
		}
		else
		{
			/*if($data['variableName'] == 'freeMoney')
			{
				$accountVariable->var_id = -4;
			}*/
			$accountVariable->player_id = $data['playerId'];
			$accountVariable->variable_name = $data['variableName'];
			$accountVariable->variable_value = $data['variableValue'];
			$accountVariable->variable_type = 'STRING';
			try
			{
				$accountVariable->save();
			}
			catch(Exception $e)
			{
				$filePath = '/home/zenfox/backup_player/error_logs.txt';
	            $fh = fopen($filePath, 'a');
        	    fwrite($fh, "INSERTING ACCOUNT VARIABLE->" . $e);
                fclose($fh);
				return false;		
			}
			return true;
		}
		//Zenfox_Debug::dump($data, 'data', true, true);
	}
	
	public function update($data)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($data['playerId']);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
					->update('AccountVariable av')
					->set('av.variable_value', '?', $data['variableValue'])
					->where('av.player_id = ?', $data['playerId'])
					->andWhere('av.var_id = ?', $data['varId']);
					
		try
		{
			$query->execute();
		}
		catch(Exception $e)
		{
			return false;
		}
		return true;
	}
	
	public function getData($playerId, $varName)
	{
		$conn = Zenfox_Partition::getInstance()->getConnections($playerId);
		Doctrine_Manager::getInstance()->setCurrentConnection($conn);
		
		$query = Zenfox_Query::create()
					->from('AccountVariable av')
					->where('av.player_id = ?', $playerId)
					->andWhere('av.variable_name = ?', $varName);
					
		try
		{
			$result = $query->fetchArray();
		}
		catch(Exception $e)
		{
		}
		if($result)
		{
			return array(
				'varId' => $result[0]['var_id'],
				'varValue' => $result[0]['variable_value']
			);
		}
		return false;
	}
	
	public function getIPLPromotionWinners($varName, $transactionType, $transEndTime)
	{
		$connections = Zenfox_Partition::getInstance()->getConnections(-1);
		
		/* $query = "select av.player_id as playerId, a.amount as amount, av.variable_value as team, a.trans_end_time as time 
				from account_variables av, audit_report a where av.variable_name in (" . $varName . ") and av.player_id = 
				a.player_id and a.transaction_type = '"	. $transactionType . "' and a.trans_end_time >= '" . $transEndTime . "'"; */
		
		$query = "select player_id as playerId, variable_value as team from account_variables where variable_name in (" . $varName . ")";
		
		
		$finalData = array();
		$index = 0;
		foreach($connections as $conn)
		{
			$currentConnection = Doctrine_Manager::getInstance()->getConnection($conn);
			try
			{
				$result = $currentConnection->prepare($query);
				$result->execute();
				$resultset = $result->fetchAll();
			}
			catch(Exception $e)
			{
				Zenfox_Debug::dump($e, 'exp', true, true);
			}
			if($resultset)
			{
				foreach($resultset as $data)
				{
					$finalData[$index]['Player Id'] = $data['playerId'];
					//$finalData[$index]['Amount'] = $data['amount'];
					$finalData[$index]['Team'] = $data['team'];
					//$finalData[$index]['Time'] = $data['time'];
					$index++;
				}
			}
		}
		
		return $finalData;
	}
}