<?php

/**
 * BaseTableConfigLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $game_flavour
 * @property integer $table_config_id
 * @property enum $amount_type
 * @property integer $min_players
 * @property integer $max_players
 * @property string $currency
 * @property double $min_bet
 * @property double $max_bet
 * @property string $config
 * @property string $allowed_frontend_ids
 * @property integer $config_log_id
 * @property flavour $gameFlavour
 * @property Doctrine_Collection $cef_gamelogs
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BaseTableConfigLog extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('table_config_log');
        $this->hasColumn('game_flavour', 'string', 45, array(
             'type' => 'string',
             'primary' => true,
             'fixed' => 1,
             'length' => '45',
             ));
        $this->hasColumn('table_config_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('amount_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'REAL',
              1 => 'BONUS',
              2 => 'BOTH',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('min_players', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('max_players', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('currency', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '3',
             ));
        $this->hasColumn('min_bet', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('max_bet', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('config', 'string', 10000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '10000',
             ));
        $this->hasColumn('allowed_frontend_ids', 'string', 1000, array(
             'type' => 'string',
             'length' => '1000',
             ));
        $this->hasColumn('config_log_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));


        $this->index('fk_table_config_flavours', array(
             'fields' => 
             array(
              0 => 'game_flavour',
             ),
             ));
        $this->option('charset', 'utf8');
        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasOne('flavour as gameFlavour', array(
             'local' => 'game_flavour',
             'foreign' => 'game_flavour'));

        $this->hasMany('cefGamelog as cef_gamelogs', array(
             'local' => 'table_config_id',
             'foreign' => 'table_config_id'));
    }
}