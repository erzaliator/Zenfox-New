<?php

/**
 * BaseWageringRule
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $player_id
 * @property float $min_wager_amount
 * @property float $max_wager_amount
 * @property string $wagering_rule
 * @property enum $enabled
 * @property enum $rule_met
 * @property timestamp $added_time
 * @property timestamp $expiry_time
 * @property string $expiry_rule
 * @property float $deposited_amount
 * @property float $wager_met_amount
 * @property enum $amount_type
 * @property integer $audit_id
 * @property integer $source_id
 * @property Doctrine_Collection $gamegroup_wageringrules
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BaseWageringRule extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('wagering_rules');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('player_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('min_wager_amount', 'float', null, array(
             'type' => 'float',
             'default' => 0,
             ));
        $this->hasColumn('max_wager_amount', 'float', null, array(
             'type' => 'float',
             'default' => -1,
             ));
        $this->hasColumn('wagering_rule', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('enabled', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'ENABLED',
              1 => 'DISABLED',
             ),
             ));
        $this->hasColumn('rule_met', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'MET',
              1 => 'NOT_MET',
             ),
             ));
        $this->hasColumn('added_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('expiry_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('expiry_rule', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('deposited_amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('wager_met_amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('amount_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'REAL',
              1 => 'BONUS',
              2 => 'BOTH',
             ),
             ));
        $this->hasColumn('audit_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('source_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));

        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasMany('GamegroupWageringrule as gamegroup_wageringrules', array(
             'local' => 'player_id',
             'foreign' => 'player_id'));
    }
}