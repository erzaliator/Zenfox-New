<?php

/**
 * BasecurrencyConversion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $source_currency
 * @property string $destination_currency
 * @property float $conversion_rate
 * @property currency $sourceCurrency
 * @property currency $destinationCurrency
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BaseCurrencyConversion extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('currency_conversion');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('source_currency', 'string', 3, array(
             'type' => 'string',
             'notnull' => true,
             'fixed' => 1,
             'length' => '3',
             ));
        $this->hasColumn('destination_currency', 'string', 3, array(
             'type' => 'string',
             'notnull' => true,
             'fixed' => 1,
             'length' => '3',
             ));
        $this->hasColumn('conversion_rate', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));


        $this->index('source_currency', array(
             'fields' => 
             array(
              0 => 'source_currency',
             ),
             ));
        $this->index('destination_currency', array(
             'fields' => 
             array(
              0 => 'destination_currency',
             ),
             ));
        $this->index('currency', array(
             'fields' => 
             array(
              0 => 'source_currency',
              1 => 'destination_currency',
             ),
             ));
        $this->option('charset', 'utf8');
        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasOne('currency as sourceCurrency', array(
             'local' => 'source_currency',
             'foreign' => 'currency_code'));

        $this->hasOne('currency as destinationCurrency', array(
             'local' => 'destination_currency',
             'foreign' => 'currency_code'));
    }
}