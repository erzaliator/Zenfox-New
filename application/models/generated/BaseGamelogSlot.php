<?php

/**
 * BasegamelogSlot
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $log_id
 * @property integer $session_id
 * @property integer $player_id
 * @property string $wagered_currency
 * @property accountDetail $player
 * @property currency $wageredCurrency
 * @property Doctrine_Collection $pjp_winners
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BaseGamelogSlot extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('gamelog_slots');
        $this->hasColumn('log_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('session_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('player_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('wagered_currency', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '3',
             ));
        $this->hasColumn('machine_id', 'integer', 4, array(
        	'type' => 'integer',
        	'length' => '4',
        	));
        $this->hasColumn('bet_coins', 'integer', 4, array(
        	'type' => 'integer',
        	'length' => '4',
        	));
        $this->hasColumn('bet_lines', 'string', 45, array(
        	'type' => 'string',
        	'length' => '45',
        	));
        $this->hasColumn('bet_amount', 'float', null, array(
        	'type' => 'float',
        	));
        $this->hasColumn('win_lines', 'string', 45, array(
        	'type' => 'string',
        	'length' => '45',
        	));
        $this->hasColumn('win_amount', 'float', null, array(
        	'type' => 'float',
        	));
       	$this->hasColumn('datetime', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('amount_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'REAL',
              1 => 'BONUS',
              2 => 'BOTH',
             ),
             ));
        $this->hasColumn('pjp_winstatus', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'WIN',
              1 => 'NOWIN',
             ),
             'default' => 'NOWIN',
             ));
        $this->hasColumn('pjp_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('pjp_rng', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('pjp_win_amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('running_machine_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('game_flavour', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'fixed' => 1,
             'length' => '45',
             ));
        $this->hasColumn('spin_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'AUTO',
              1 => 'NORMAL',
              2 => 'BONUS',
              3 => 'FEATURE',
             ),
             ));
        $this->hasColumn('win_string', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '255',
             ));
        $this->hasColumn('frontend_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));


        $this->index('gamelog_slots_gamelog_session', array(
             'fields' => 
             array(
              0 => 'player_id',
              1 => 'session_id',
             ),
             ));
        $this->index('gamelog_slots_player_id', array(
             'fields' => 
             array(
              0 => 'player_id',
             ),
             ));
        $this->index('wagered_currency', array(
             'fields' => 
             array(
              0 => 'wagered_currency',
             ),
             ));
        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasOne('accountDetail as player', array(
             'local' => 'player_id',
             'foreign' => 'player_id'));

        $this->hasOne('currency as wageredCurrency', array(
             'local' => 'wagered_currency',
             'foreign' => 'currency_code'));

        $this->hasMany('pjpWinner as pjp_winners', array(
             'local' => 'player_id',
             'foreign' => 'player_id'));
        
        $this->hasOne('RunningSlot', array(
             'local' => 'machine_id',
             'foreign' => 'id'));
    }
}